---
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type {
  TypeProjectData,
  TypeTechnologiesFields,
  TypeTechnologies,
} from "../../lib/contentful";
import { type Asset } from "contentful";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Button from "~/components/Button.astro";
const { default: githubRaw } = await import(
  "../../assets/images/github.svg?raw"
);

export async function getStaticPaths() {
  const { items } = await contentfulClient.getEntries<TypeProjectData>({
    content_type: "projectData",
  });

  const pages = items.map((item) => {
    //Type guard to prevent TS errors
    const technologiesUsed = item.fields.technologiesUsed
      ? (item.fields.technologiesUsed as TypeTechnologies[])
      : [];
    const cardImage = item.fields.cardImage as Asset;
    const imageUrl =
      typeof cardImage.fields.file?.url === "string"
        ? cardImage.fields.file.url
        : "";
    const imageAlt =
      typeof cardImage.fields.title === "string" ? cardImage.fields.title : "";
    const imageDescription =
      typeof cardImage.fields.description === "string"
        ? cardImage.fields.description
        : "";

    return {
      params: { slug: item.fields.slug },
      props: {
        title: item.fields.projectTitle,
        overview: item.fields.projectOverview,
        content: documentToHtmlString(item.fields.projectBreakdown),
        repoUrl: item.fields.repoUrl,
        technologiesUsed,
        imageUrl,
        imageAlt,
        imageDescription,
      },
    };
  });

  return pages;
}

const {
  content,
  imageUrl,
  imageAlt,
  imageDescription,
  overview,
  repoUrl,
  technologiesUsed,
  title,
} = Astro.props;
---

<BaseLayout
  pageTitle={title}
  pageDescription={`A project page for the ${title} project.`}
>
  <html lang="en">
    <head>
      <title>{title}</title>
    </head>
    <body class="flex items-center justify-center min-h-screen">
      <div class="w-full px-12 md:px-24 lg:px-72 mb-16">
        <div class="flex justify-center md:justify-start mb-4">
          <Button
            urlPath="/projects"
            text="Back to Projects"
            newAttributes="mb-8"
          />
        </div>
        <div class="text-center">
          <!-- Project Title -->
          <h1
            class="font-bold text-primaryTeal mb-10 text-4xl md:text-6xl lg:text-5xl"
          >
            {title}
          </h1>
          <!-- Project  Overview -->
          <p class="text-primaryWhite text-justify">{overview}</p>
        </div>
        <!-- GitHub Link -->
        <div class="flex justify-center mt-8">
          <a
            href={repoUrl}
            target="_blank"
            class="text-primaryTeal hover:text-secondaryGray flex items-center"
          >
            <svg width="35" height="35" set:html={githubRaw} />
          </a>
        </div>
        <!-- Divider -->
        <div class="flex justify-center mt-4">
          <div class="w-full max-w-prose border-t border-primaryWhite"></div>
        </div>
        <!-- Contect -->
        <div class="text-primaryWhite text-justify mt-8">
          <article set:html={content} />
        </div>
        <!-- Image -->
        <div class="flex flex-col items-center mt-8">
          <img src={imageUrl} alt={imageAlt} class="w-full max-w-prose" />
          <p class="text-primaryWhite text-center mt-6">{imageDescription}</p>
        </div>
        <div class="flex justify-center mt-4">
          <div class="w-full max-w-prose border-t border-primaryWhite"></div>
        </div>
        <!-- Technologies Used -->
        <div class="w-full max-w-prose mt-8">
          <h1 class="text-primaryWhite text-left mb-4 text-4xl">
            Technology Used
          </h1>
          <!-- Add your technologies used content here -->
          <ul class="text-primaryWhite text-left">
            {
              technologiesUsed.map((tech) => {
                const techLogo = tech.fields.technologyLogo as Asset;
                const techLogoURL =
                  typeof techLogo.fields.file?.url === "string"
                    ? techLogo.fields.file.url
                    : "";
                const imageAlt =
                  typeof techLogo.fields.title === "string"
                    ? techLogo.fields.title
                    : "";
                const imageDescription =
                  typeof techLogo.fields.description === "string"
                    ? techLogo.fields.description
                    : "";
                return (
                  <img
                    src={techLogoURL}
                    alt={imageAlt}
                    title={imageDescription}
                    class="w-24 h-24 mr-4"
                  />
                );
              })
            }
          </ul>
        </div>
      </div>
    </body>
  </html>
</BaseLayout>
